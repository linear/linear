# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Payload for agent context webhook events."""
type AgentContextEventWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """The agent context that the event belongs to."""
  agentContext: AgentContextWebhookPayload!

  """ID of the app user the agent context belongs to."""
  appUserId: String!

  """The comment that was created."""
  comment: CommentWebhookPayload

  """The time the payload was created."""
  createdAt: DateTime!

  """ID of the OAuth client the app user is tied to."""
  oauthClientId: String!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """The type of resource."""
  type: String!
}

"""Payload for an agent context webhook."""
type AgentContextWebhookPayload {
  """The ID of the agent that the agent context belongs to."""
  appUserId: String!

  """The time at which the entity was archived."""
  archivedAt: String

  """The comment this agent context is associated with."""
  comment: CommentChildWebhookPayload

  """The ID of the comment this agent context is associated with."""
  commentId: String

  """The time at which the entity was created."""
  createdAt: String!

  """The user that created the agent context."""
  creator: UserChildWebhookPayload!

  """The ID of the user that created the agent context."""
  creatorId: String!

  """The time the agent context ended."""
  endedAt: String

  """The ID of the entity."""
  id: String!

  """The issue this agent context is associated with."""
  issue: IssueWithDescriptionChildWebhookPayload

  """The ID of the issue this agent context is associated with."""
  issueId: String

  """The ID of the organization that the agent context belongs to."""
  organizationId: String!

  """Metadata about the external source that created this agent context."""
  sourceMetadata: JSONObject

  """The time the agent context started working."""
  startedAt: String

  """The current status of the agent context."""
  status: String!

  """A summary of the activities in this context."""
  summary: String

  """The type of the agent context."""
  type: String!

  """The time at which the entity was updated."""
  updatedAt: String!
}

"""Payload for app user notification webhook events."""
type AppUserNotificationWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """ID of the app user the notification is for."""
  appUserId: String!

  """The time the payload was created."""
  createdAt: DateTime!

  """Details of the notification."""
  notification: NotificationWebhookPayload!

  """ID of the OAuth client the app user is tied to."""
  oauthClientId: String!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """The type of resource."""
  type: String!
}

"""Payload for app user team access change webhook events."""
type AppUserTeamAccessChangedWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """IDs of the teams the app user was added to."""
  addedTeamIds: [String!]!

  """ID of the app user the notification is for."""
  appUserId: String!

  """Whether the app user can access all public teams."""
  canAccessAllPublicTeams: Boolean!

  """The time the payload was created."""
  createdAt: DateTime!

  """ID of the OAuth client the app user is tied to."""
  oauthClientId: String!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """IDs of the teams the app user was removed from."""
  removedTeamIds: [String!]!

  """The type of resource."""
  type: String!
}

"""Payload for an attachment webhook."""
type AttachmentWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the creator of the attachment."""
  creatorId: String

  """The ID of the non-Linear user who created the attachment."""
  externalUserCreatorId: String

  """
  Whether attachments for the same source application should be grouped in the Linear UI.
  """
  groupBySource: Boolean!

  """The ID of the entity."""
  id: String!

  """The ID of the issue this attachment belongs to."""
  issueId: String!

  """Custom metadata related to the attachment."""
  metadata: JSONObject!

  """The ID of the issue this attachment belonged to originally."""
  originalIssueId: String

  """Information about the source which created the attachment."""
  source: JSONObject

  """The source type of the attachment."""
  sourceType: String

  """Optional subtitle of the attachment."""
  subtitle: String

  """The title of the attachment."""
  title: String!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the attachment."""
  url: String!
}

"""Payload for an audit entry webhook."""
type AuditEntryWebhookPayload {
  """The ID of the user that caused the audit entry to be created."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """Country code of request resulting to audit entry."""
  countryCode: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the entity."""
  id: String!

  """IP from actor when entry was recorded."""
  ip: String

  """Additional metadata related to the audit entry."""
  metadata: JSONObject

  """The ID of the organization that the audit entry belongs to."""
  organizationId: String!

  """
  Additional information related to the request which performed the action.
  """
  requestInformation: JSONObject

  """The type of the audit entry."""
  type: String!

  """The time at which the entity was updated."""
  updatedAt: String!
}

"""Base fields for all webhook payloads."""
type BaseWebhookPayload {
  """The time the payload was created."""
  createdAt: DateTime!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!
}

"""Certain properties of a comment."""
type CommentChildWebhookPayload {
  """The body of the comment."""
  body: String!

  """The ID of the document content this comment belongs to."""
  documentContentId: String

  """The ID of the comment."""
  id: String!

  """The ID of the initiative update this comment belongs to."""
  initiativeUpdateId: String

  """The ID of the issue this comment belongs to."""
  issueId: String

  """The ID of the project update this comment belongs to."""
  projectUpdateId: String

  """The ID of the user who created this comment."""
  userId: String
}

"""Payload for a comment webhook."""
type CommentWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The body of the comment."""
  body: String!

  """The bot actor data for this comment."""
  botActor: String

  """The time at which the entity was created."""
  createdAt: String!

  """The document content for this comment."""
  documentContent: DocumentContentChildWebhookPayload

  """The ID of the document content this comment belongs to."""
  documentContentId: String

  """When the comment was last edited."""
  editedAt: String

  """The external user who created this comment."""
  externalUser: ExternalUserChildWebhookPayload

  """The ID of the external user who created this comment."""
  externalUserId: String

  """The ID of the entity."""
  id: String!

  """The initiative update this comment belongs to."""
  initiativeUpdate: InitiativeUpdateChildWebhookPayload

  """The ID of the initiative update this comment belongs to."""
  initiativeUpdateId: String

  """The issue this comment belongs to."""
  issue: IssueChildWebhookPayload

  """The ID of the issue this comment belongs to."""
  issueId: String

  """The parent comment."""
  parent: CommentChildWebhookPayload

  """The ID of the parent comment."""
  parentId: String

  """The ID of the post this comment belongs to."""
  postId: String

  """The project update this comment belongs to."""
  projectUpdate: ProjectUpdateChildWebhookPayload

  """The ID of the project update this comment belongs to."""
  projectUpdateId: String

  """The quoted text in this comment."""
  quotedText: String

  """The reaction data for this comment."""
  reactionData: JSONObject!

  """When the comment was resolved."""
  resolvedAt: String

  """The ID of the comment that resolved this comment."""
  resolvingCommentId: String

  """The ID of the user who resolved this comment."""
  resolvingUserId: String

  """The entity this comment is synced with."""
  syncedWith: JSONObject

  """The time at which the entity was updated."""
  updatedAt: String!

  """The user who created this comment."""
  user: UserChildWebhookPayload

  """The ID of the user who created this comment."""
  userId: String
}

"""Payload for custom webhook resource events."""
type CustomResourceWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """The time the payload was created."""
  createdAt: DateTime!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """The type of resource."""
  type: String!
}

"""Certain properties of a customer."""
type CustomerChildWebhookPayload {
  """The domains associated with this customer."""
  domains: [String!]!

  """The ids of the customers in external systems."""
  externalIds: [String!]!

  """The ID of the customer."""
  id: String!

  """The name of the customer."""
  name: String!
}

"""Certain properties of a customer need."""
type CustomerNeedChildWebhookPayload {
  """The ID of the attachment this need is referencing."""
  attachmentId: String

  """The ID of the customer that this need is attached to."""
  customerId: String

  """The ID of the customer need."""
  id: String!

  """The ID of the issue this need is referencing."""
  issueId: String

  """The ID of the project this need is referencing."""
  projectId: String
}

"""Payload for a customer need webhook."""
type CustomerNeedWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The attachment this need is referencing."""
  attachment: AttachmentWebhookPayload

  """The ID of the attachment this need is referencing."""
  attachmentId: String

  """The body of the need in Markdown format."""
  body: String

  """The ID of the comment this need is referencing."""
  commentId: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the creator of the customer need."""
  creatorId: String

  """The customer that this need is attached to."""
  customer: CustomerChildWebhookPayload

  """The ID of the customer that this need is attached to."""
  customerId: String

  """The ID of the entity."""
  id: String!

  """The issue this need is referencing."""
  issue: IssueChildWebhookPayload

  """The ID of the issue this need is referencing."""
  issueId: String

  """
  The issue ID this customer need was originally created on. Will be undefined if the customer need hasn't been moved.
  """
  originalIssueId: String

  """The priority of the need."""
  priority: Float!

  """The project this need is referencing."""
  project: ProjectChildWebhookPayload

  """The ID of the project attachment this need is referencing."""
  projectAttachmentId: String

  """The ID of the project this need is referencing."""
  projectId: String

  """The time at which the entity was updated."""
  updatedAt: String!
}

"""Certain properties of a customer status."""
type CustomerStatusChildWebhookPayload {
  """The ID of the customer status."""
  id: String!

  """The name of the customer status."""
  name: String!

  """The type of the customer status."""
  type: String!
}

"""Certain properties of a customer tier."""
type CustomerTierChildWebhookPayload {
  """The color of the customer tier."""
  color: String!

  """The display name of the customer tier."""
  displayName: String!

  """The ID of the customer tier."""
  id: String!

  """The name of the customer tier."""
  name: String!
}

"""Payload for a customer webhook."""
type CustomerWebhookPayload {
  """The approximate number of needs of the customer."""
  approximateNeedCount: Float!

  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The domains associated with this customer."""
  domains: [String!]!

  """The ids of the customers in external systems."""
  externalIds: [String!]!

  """The ID of the entity."""
  id: String!

  """The customer's logo URL."""
  logoUrl: String

  """
  The ID of the main source, when a customer has multiple sources. Must be one of externalIds.
  """
  mainSourceId: String

  """The name of the customer."""
  name: String!

  """The ID of the user who owns the customer."""
  ownerId: String

  """The annual revenue generated by the customer."""
  revenue: Float

  """The size of the customer."""
  size: Float

  """The ID of the Slack channel used to interact with the customer."""
  slackChannelId: String

  """The customer's unique URL slug."""
  slugId: String!

  """The customer status."""
  status: CustomerStatusChildWebhookPayload

  """The ID of the customer status."""
  statusId: String

  """The customer tier."""
  tier: CustomerTierChildWebhookPayload

  """The ID of the customer tier."""
  tierId: String

  """The time at which the entity was updated."""
  updatedAt: String!
}

"""Certain properties of a cycle."""
type CycleChildWebhookPayload {
  """The end date of the cycle."""
  endsAt: String!

  """The ID of the cycle."""
  id: String!

  """The name of the cycle."""
  name: String

  """The number of the cycle."""
  number: Float!

  """The start date of the cycle."""
  startsAt: String!
}

"""Payload for a cycle webhook."""
type CycleWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """
  The time at which the cycle was automatically archived by the auto pruning process.
  """
  autoArchivedAt: String

  """
  The completion time of the cycle. If null, the cycle hasn't been completed.
  """
  completedAt: String

  """The number of completed issues in the cycle after each day."""
  completedIssueCountHistory: [Float!]!

  """The number of completed estimation points after each day."""
  completedScopeHistory: [Float!]!

  """The time at which the entity was created."""
  createdAt: String!

  """The cycle's description."""
  description: String

  """The end date of the cycle."""
  endsAt: String!

  """The ID of the entity."""
  id: String!

  """The number of in progress estimation points after each day."""
  inProgressScopeHistory: [Float!]!

  """The ID of the cycle inherited from."""
  inheritedFromId: String

  """The total number of issues in the cycle after each day."""
  issueCountHistory: [Float!]!

  """The name of the cycle."""
  name: String

  """The number of the cycle."""
  number: Float!

  """The total number of estimation points after each day."""
  scopeHistory: [Float!]!

  """The start date of the cycle."""
  startsAt: String!

  """The team ID of the cycle."""
  teamId: String!

  """The IDs of the uncompleted issues upon close."""
  uncompletedIssuesUponCloseIds: [String!]!

  """The time at which the entity was updated."""
  updatedAt: String!
}

"""Union type for all possible webhook entity data payloads"""
union DataWebhookPayload = AgentContextWebhookPayload | AttachmentWebhookPayload | AuditEntryWebhookPayload | CommentWebhookPayload | CustomerNeedWebhookPayload | CustomerWebhookPayload | CycleWebhookPayload | DocumentWebhookPayload | InitiativeUpdateWebhookPayload | InitiativeWebhookPayload | IssueLabelWebhookPayload | IssueWebhookPayload | ProjectUpdateWebhookPayload | ProjectWebhookPayload | ReactionWebhookPayload | UserWebhookPayload

"""
Represents a date and time in ISO 8601 format. Accepts shortcuts like `2021` to represent midnight Fri Jan 01 2021. Also accepts ISO 8601 durations strings which are added to the current date to create the represented date (e.g '-P2W1D' represents the date that was two weeks and 1 day ago) 
"""
scalar DateTime

"""Certain properties of a document."""
type DocumentChildWebhookPayload {
  """The ID of the document."""
  id: String!

  """The initiative this document belongs to."""
  initiative: InitiativeChildWebhookPayload

  """The ID of the initiative this document belongs to."""
  initiativeId: String

  """The project this document belongs to."""
  project: ProjectChildWebhookPayload

  """The ID of the project this document belongs to."""
  projectId: String

  """The title of the document."""
  title: String!
}

"""Certain properties of a document content."""
type DocumentContentChildWebhookPayload {
  """The document this document content belongs to."""
  document: DocumentChildWebhookPayload

  """The project this document belongs to."""
  project: ProjectChildWebhookPayload
}

"""Payload for a document webhook."""
type DocumentWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The color of the document."""
  color: String

  """The content of the document."""
  content: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the user who created the document."""
  creatorId: String

  """The description of the document."""
  description: String

  """The time at which the document was hidden."""
  hiddenAt: String

  """The icon of the document."""
  icon: String

  """The ID of the entity."""
  id: String!

  """The ID of the initiative this document belongs to."""
  initiativeId: String

  """The ID of the last template that was applied to this document."""
  lastAppliedTemplateId: String

  """The ID of the project this document belongs to."""
  projectId: String

  """The ID of the resource folder this document belongs to."""
  resourceFolderId: String

  """The document's unique URL slug."""
  slugId: String!

  """The order of the item in the resources list."""
  sortOrder: Float!

  """The IDs of the users who are subscribed to this document."""
  subscriberIds: [String!]

  """The title of the document."""
  title: String!

  """A flag that indicates whether the document is in the trash bin."""
  trashed: Boolean

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who last updated the document."""
  updatedById: String
}

"""Payload for entity-related webhook events."""
type EntityWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """The time the payload was created."""
  createdAt: DateTime!

  """The entity that was changed."""
  data: DataWebhookPayload!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """The type of resource, i.e., the name of the entity."""
  type: String!

  """In case of an update event, previous values of all updated properties."""
  updatedFrom: JSONObject

  """URL for the entity."""
  url: String
}

"""Certain properties of an external user."""
type ExternalUserChildWebhookPayload {
  """The email of the external user."""
  email: String!

  """The ID of the external user."""
  id: String!

  """The name of the external user."""
  name: String!
}

"""Certain properties of an initiative."""
type InitiativeChildWebhookPayload {
  """The ID of the initiative."""
  id: String!

  """The name of the initiative."""
  name: String!

  """The URL of the initiative."""
  url: String!
}

"""Certain properties of an initiative update."""
type InitiativeUpdateChildWebhookPayload {
  """The body of the initiative update."""
  bodyData: String!

  """The edited at timestamp of the initiative update."""
  editedAt: String!

  """The health of the initiative update."""
  health: String!

  """The ID of the initiative update."""
  id: String!
}

"""Payload for an initiative update webhook."""
type InitiativeUpdateWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The body of the initiative update."""
  body: String!

  """The body data of the initiative update."""
  bodyData: String!

  """The time at which the entity was created."""
  createdAt: String!

  """The edited at timestamp of the initiative update."""
  editedAt: String!

  """The health of the initiative update."""
  health: String!

  """The ID of the entity."""
  id: String!

  """The initiative that the initiative update belongs to."""
  initiative: InitiativeChildWebhookPayload!

  """The initiative id of the initiative update."""
  initiativeId: String!

  """The reaction data for this initiative update."""
  reactionData: JSONObject!

  """The slug id of the initiative update."""
  slugId: String!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the initiative update."""
  url: String

  """The user that created the initiative update."""
  user: UserChildWebhookPayload!

  """The user id of the initiative update."""
  userId: String!
}

"""Payload for an initiative webhook."""
type InitiativeWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The color of the initiative."""
  color: String

  """When the initiative was completed."""
  completedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The user who created the initiative."""
  creator: UserChildWebhookPayload

  """The ID of the user who created the initiative."""
  creatorId: String

  """The description of the initiative."""
  description: String!

  """The resolution of the update reminder frequency."""
  frequencyResolution: String!

  """The health status of the initiative."""
  health: String

  """When the health status was last updated."""
  healthUpdatedAt: String

  """The icon of the initiative."""
  icon: String

  """The ID of the entity."""
  id: String!

  """The last update for this initiative."""
  lastUpdate: InitiativeUpdateChildWebhookPayload

  """The ID of the last update for this initiative."""
  lastUpdateId: String

  """The name of the initiative."""
  name: String!

  """The ID of the organization this initiative belongs to."""
  organizationId: String!

  """The user who owns the initiative."""
  owner: UserChildWebhookPayload

  """The ID of the user who owns the initiative."""
  ownerId: String

  """The parent initiative associated with the initiative."""
  parentInitiative: InitiativeChildWebhookPayload

  """The projects associated with the initiative."""
  projects: [ProjectChildWebhookPayload!]

  """The unique slug identifier of the initiative."""
  slugId: String!

  """The sort order of the initiative within the organization."""
  sortOrder: Float!

  """When the initiative was started."""
  startedAt: String

  """The current status of the initiative."""
  status: String!

  """The sub-initiatives associated with the initiative."""
  subInitiatives: [InitiativeChildWebhookPayload!]

  """The target date of the initiative."""
  targetDate: String

  """The resolution of the target date."""
  targetDateResolution: String

  """Whether the initiative is trashed."""
  trashed: Boolean

  """The frequency of update reminders."""
  updateReminderFrequency: Float

  """The frequency of update reminders in weeks."""
  updateReminderFrequencyInWeeks: Float

  """The day of the week for update reminders."""
  updateRemindersDay: Float

  """The hour of the day for update reminders."""
  updateRemindersHour: Float

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the initiative."""
  url: String!
}

"""Certain properties of an integration."""
type IntegrationChildWebhookPayload {
  """The ID of the integration."""
  id: String!

  """The service of the integration."""
  service: String!
}

"""An issue assignment notification type."""
scalar IssueAssignedToYouNotificationType

"""Payload for an issue assigned to you notification."""
type IssueAssignedToYouNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """An issue assigned to you notification type."""
  type: IssueAssignedToYouNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""Certain properties of an issue."""
type IssueChildWebhookPayload {
  """The ID of the issue."""
  id: String!

  """The identifier of the issue."""
  identifier: String!

  """The ID of the team that the issue belongs to."""
  team: TeamChildWebhookPayload!

  """The ID of the team that the issue belongs to."""
  teamId: String!

  """The title of the issue."""
  title: String!

  """The URL of the issue."""
  url: String!
}

"""An issue comment mention notification type."""
scalar IssueCommentMentionNotificationType

"""Payload for an issue comment mention notification."""
type IssueCommentMentionNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The comment this notification belongs to."""
  comment: CommentChildWebhookPayload!

  """The ID of the comment this notification belongs to."""
  commentId: String!

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """The parent comment for the comment this notification belongs to."""
  parentComment: CommentChildWebhookPayload

  """
  The ID of the parent comment for the comment this notification belongs to.
  """
  parentCommentId: String

  """An issue comment mention notification type."""
  type: IssueCommentMentionNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""An issue comment reaction notification type."""
scalar IssueCommentReactionNotificationType

"""Payload for an issue comment reaction notification."""
type IssueCommentReactionNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The comment this notification belongs to."""
  comment: CommentChildWebhookPayload!

  """The ID of the comment this notification belongs to."""
  commentId: String!

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """The parent comment for the comment this notification belongs to."""
  parentComment: CommentChildWebhookPayload

  """
  The ID of the parent comment for the comment this notification belongs to.
  """
  parentCommentId: String

  """The emoji of the reaction this notification is for."""
  reactionEmoji: String!

  """An issue comment reaction notification type."""
  type: IssueCommentReactionNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""An issue emoji reaction notification type."""
scalar IssueEmojiReactionNotificationType

"""Payload for an issue emoji reaction notification."""
type IssueEmojiReactionNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """The emoji of the reaction this notification is for."""
  reactionEmoji: String!

  """An issue emoji reaction notification type."""
  type: IssueEmojiReactionNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""Certain properties of an issue label."""
type IssueLabelChildWebhookPayload {
  """The color of the issue label."""
  color: String!

  """The ID of the issue label."""
  id: String!

  """The name of the issue label."""
  name: String!

  """The parent ID of the issue label."""
  parentId: String
}

"""Payload for an issue label webhook."""
type IssueLabelWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The color of the issue label."""
  color: String!

  """The time at which the entity was created."""
  createdAt: String!

  """The creator ID of the issue label."""
  creatorId: String

  """The label's description."""
  description: String

  """The ID of the entity."""
  id: String!

  """The original label inherited from."""
  inheritedFromId: String

  """Whether the label is a group."""
  isGroup: Boolean!

  """The name of the issue label."""
  name: String!

  """The parent ID of the issue label."""
  parentId: String

  """The team ID of the issue label."""
  teamId: String

  """The time at which the entity was updated."""
  updatedAt: String!
}

"""An issue mention notification type."""
scalar IssueMentionNotificationType

"""Payload for an issue mention notification."""
type IssueMentionNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """An issue mention notification type."""
  type: IssueMentionNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""An issue new comment notification type."""
scalar IssueNewCommentNotificationType

"""Payload for an issue new comment notification."""
type IssueNewCommentNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The comment this notification belongs to."""
  comment: CommentChildWebhookPayload!

  """The ID of the comment this notification belongs to."""
  commentId: String!

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """The parent comment for the comment this notification belongs to."""
  parentComment: CommentChildWebhookPayload

  """
  The ID of the parent comment for the comment this notification belongs to.
  """
  parentCommentId: String

  """An issue new comment notification type."""
  type: IssueNewCommentNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""Payload for issue SLA webhook events."""
type IssueSlaWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """The time the payload was created."""
  createdAt: DateTime!

  """The issue that the SLA event is about."""
  issueData: IssueWebhookPayload!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """The type of resource."""
  type: String!

  """URL for the issue."""
  url: String
}

"""An issue status changed notification type."""
scalar IssueStatusChangedNotificationType

"""Payload for a terminal issue status change notification."""
type IssueStatusChangedNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """A terminal issue status change notification type."""
  type: IssueStatusChangedNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""An issue unassignment notification type."""
scalar IssueUnassignedFromYouNotificationType

"""Payload for an issue unassignment notification."""
type IssueUnassignedFromYouNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload!

  """The ID of the issue this notification belongs to."""
  issueId: String!

  """An issue unassignment notification type."""
  type: IssueUnassignedFromYouNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""Payload for an issue webhook."""
type IssueWebhookPayload {
  """The time at which the issue was added to a cycle."""
  addedToCycleAt: String

  """The time at which the issue was added to a project."""
  addedToProjectAt: String

  """The time at which the issue was added to a team."""
  addedToTeamAt: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The user that is assigned to the issue."""
  assignee: UserChildWebhookPayload

  """The ID of the user that is assigned to the issue."""
  assigneeId: String

  """The time at which the issue was auto-archived."""
  autoArchivedAt: String

  """The time at which the issue was auto-closed."""
  autoClosedAt: String

  """The bot actor data for this issue."""
  botActor: String

  """The time at which the issue was canceled."""
  canceledAt: String

  """The time at which the issue was completed."""
  completedAt: String

  """The time at which the entity was created."""
  createdAt: String!

  """The user that created the issue."""
  creator: UserChildWebhookPayload

  """The ID of the user that created the issue."""
  creatorId: String

  """The cycle that the issue belongs to."""
  cycle: CycleChildWebhookPayload

  """The ID of the cycle that the issue belongs to."""
  cycleId: String

  """The description of the issue."""
  description: String

  """The description data of the issue."""
  descriptionData: String

  """The due date of the issue."""
  dueDate: String

  """The estimate of the complexity of the issue.."""
  estimate: Float

  """The external user that created the issue."""
  externalUserCreator: ExternalUserChildWebhookPayload

  """The ID of the external user that created the issue."""
  externalUserCreatorId: String

  """The ID of the entity."""
  id: String!

  """The identifier of the issue."""
  identifier: String!

  """Integration type that created this issue, if applicable."""
  integrationSourceType: String

  """Id of the labels associated with this issue."""
  labelIds: [String!]!

  """The labels associated with this issue."""
  labels: [IssueLabelChildWebhookPayload!]!

  """The ID of the last template that was applied to the issue."""
  lastAppliedTemplateId: String

  """The issue's unique number."""
  number: Float!

  """The ID of the parent issue."""
  parentId: String

  """Previous identifiers of the issue if it has been moved between teams."""
  previousIdentifiers: [String!]!

  """
  The priority of the issue. 0 = No priority, 1 = Urgent, 2 = High, 3 = Normal, 4 = Low.
  """
  priority: Float!

  """The label of the issue's priority."""
  priorityLabel: String!

  """
  The order of the item in relation to other items in the organization, when ordered by priority.
  """
  prioritySortOrder: Float!

  """The project that the issue belongs to."""
  project: ProjectChildWebhookPayload

  """The ID of the project that the issue belongs to."""
  projectId: String

  """The project milestone that the issue belongs to."""
  projectMilestone: ProjectMilestoneChildWebhookPayload

  """The ID of the project milestone that the issue belongs to."""
  projectMilestoneId: String

  """The reaction data for this issue."""
  reactionData: JSONObject!

  """The ID of the recurring issue template that created the issue."""
  recurringIssueTemplateId: String

  """The time at which the issue would breach its SLA."""
  slaBreachesAt: String

  """The time at which the issue would enter SLA high risk."""
  slaHighRiskAt: String

  """The time at which the issue would enter SLA medium risk."""
  slaMediumRiskAt: String

  """The time at which the issue's SLA started."""
  slaStartedAt: String

  """The type of SLA the issue is under."""
  slaType: String

  """The time until an issue will be snoozed in Triage view."""
  snoozedUntilAt: String

  """The order of the item in relation to other items in the organization."""
  sortOrder: Float!

  """The ID of the source comment that the issue was created from."""
  sourceCommentId: String

  """The time at which the issue was moved into started state."""
  startedAt: String

  """The time at which the issue entered triage."""
  startedTriageAt: String

  """The issue's current workflow state."""
  state: WorkflowStateChildWebhookPayload!

  """The ID of the issue's current workflow state."""
  stateId: String!

  """
  The order of the item in the sub-issue list. Only set if the issue has a parent.
  """
  subIssueSortOrder: Float

  """The IDs of the users that are subscribed to the issue."""
  subscriberIds: [String!]!

  """The entity this issue is synced with."""
  syncedWith: JSONObject

  """The team that the issue belongs to."""
  team: TeamChildWebhookPayload

  """The ID of the team that the issue belongs to."""
  teamId: String!

  """The issue's title."""
  title: String!

  """A flag that indicates whether the issue is in the trash bin."""
  trashed: Boolean

  """The time at which the issue was triaged."""
  triagedAt: String

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the issue."""
  url: String!
}

"""Certain properties of an issue, including its description."""
type IssueWithDescriptionChildWebhookPayload {
  """The description of the issue."""
  description: String

  """The ID of the issue."""
  id: String!

  """The identifier of the issue."""
  identifier: String!

  """The ID of the team that the issue belongs to."""
  team: TeamChildWebhookPayload!

  """The ID of the team that the issue belongs to."""
  teamId: String!

  """The title of the issue."""
  title: String!

  """The URL of the issue."""
  url: String!
}

"""
The `JSONObject` scalar type represents arbitrary values as *embedded* JSON
"""
scalar JSONObject

union NotificationWebhookPayload = IssueAssignedToYouNotificationWebhookPayload | IssueCommentMentionNotificationWebhookPayload | IssueCommentReactionNotificationWebhookPayload | IssueEmojiReactionNotificationWebhookPayload | IssueMentionNotificationWebhookPayload | IssueNewCommentNotificationWebhookPayload | IssueStatusChangedNotificationWebhookPayload | IssueUnassignedFromYouNotificationWebhookPayload | OtherNotificationWebhookPayload

"""Payload for OAuth app webhook events."""
type OAuthAppWebhookPayload {
  """The type of action that triggered the webhook."""
  action: String!

  """The time the payload was created."""
  createdAt: DateTime!

  """Id of the OAuth client that was revoked."""
  oauthClientId: String!

  """ID of the organization for which the webhook belongs to."""
  organizationId: String!

  """The type of resource."""
  type: String!
}

"""Certain properties of an OAuth client."""
type OauthClientChildWebhookPayload {
  """The ID of the OAuth client."""
  id: String!

  """The name of the OAuth client."""
  name: String!
}

"""A generic type of notification."""
enum OtherNotificationType {
  customerAddedAsOwner
  customerNeedCreated
  customerNeedMarkedAsImportant
  customerNeedResolved
  documentCommentMention
  documentCommentReaction
  documentContentChange
  documentDeleted
  documentMention
  documentMoved
  documentNewComment
  documentReminder
  documentRestored
  documentSubscribed
  documentThreadResolved
  documentUnsubscribed
  feedSummaryGenerated
  initiativeAddedAsOwner
  initiativeCommentMention
  initiativeCommentReaction
  initiativeDescriptionContentChange
  initiativeMention
  initiativeNewComment
  initiativeReminder
  initiativeThreadResolved
  initiativeUpdateCommentMention
  initiativeUpdateCommentReaction
  initiativeUpdateCreated
  initiativeUpdateMention
  initiativeUpdateNewComment
  initiativeUpdatePrompt
  initiativeUpdateReaction
  issueAddedToTriage
  issueAddedToView
  issueBlocking
  issueCreated
  issueDue
  issuePriorityUrgent
  issueReminder
  issueReopened
  issueSlaBreached
  issueSlaHighRisk
  issueStatusChangedAll
  issueSubscribed
  issueThreadResolved
  issueUnblocked
  issueUnsubscribed
  oauthClientApprovalCreated
  projectAddedAsLead
  projectAddedAsMember
  projectCommentMention
  projectCommentReaction
  projectDescriptionContentChange
  projectMention
  projectMilestoneCommentMention
  projectMilestoneCommentReaction
  projectMilestoneDescriptionContentChange
  projectMilestoneMention
  projectMilestoneNewComment
  projectMilestoneThreadResolved
  projectNewComment
  projectReminder
  projectThreadResolved
  projectUpdateCommentMention
  projectUpdateCommentReaction
  projectUpdateCreated
  projectUpdateMention
  projectUpdateNewComment
  projectUpdatePrompt
  projectUpdateReaction
  pullRequestApproved
  pullRequestChangesRequested
  pullRequestChecksFailed
  pullRequestCommentMention
  pullRequestCommented
  pullRequestMention
  pullRequestRemovedFromMergeQueue
  pullRequestReviewRequested
  pullRequestReviewRerequested
  system
  teamUpdateCommentMention
  teamUpdateCommentReaction
  teamUpdateCreated
  teamUpdateMention
  teamUpdateNewComment
  teamUpdateReaction
  triageResponsibilityIssueAddedToTriage
}

"""Generic notification payload."""
type OtherNotificationWebhookPayload {
  """The actor who caused the notification."""
  actor: UserChildWebhookPayload

  """The ID of the actor who caused the notification."""
  actorId: String

  """The time at which the entity was archived."""
  archivedAt: String

  """The comment this notification belongs to."""
  comment: CommentChildWebhookPayload

  """The ID of the comment this notification belongs to."""
  commentId: String

  """The time at which the entity was created."""
  createdAt: String!

  """The document this notification belongs to."""
  document: DocumentChildWebhookPayload

  """The ID of the document this notification belongs to."""
  documentId: String

  """The ID of the external user who caused the notification."""
  externalUserActorId: String

  """The ID of the entity."""
  id: String!

  """The issue this notification belongs to."""
  issue: IssueWithDescriptionChildWebhookPayload

  """The ID of the issue this notification belongs to."""
  issueId: String

  """The parent comment this notification belongs to."""
  parentComment: CommentChildWebhookPayload

  """The ID of the parent comment this notification belongs to."""
  parentCommentId: String

  """The project this notification belongs to."""
  project: ProjectChildWebhookPayload

  """The ID of the project this notification belongs to."""
  projectId: String

  """The project update this notification belongs to."""
  projectUpdate: ProjectUpdateChildWebhookPayload

  """The ID of the project update this notification belongs to."""
  projectUpdateId: String

  """The emoji of the reaction this notification is for."""
  reactionEmoji: String

  """The type of the notification."""
  type: OtherNotificationType!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The ID of the user who received the notification."""
  userId: String!
}

"""Certain properties of a project."""
type ProjectChildWebhookPayload {
  """The ID of the project."""
  id: String!

  """The name of the project."""
  name: String!

  """The URL of the project."""
  url: String!
}

"""Certain properties of a project milestone."""
type ProjectMilestoneChildWebhookPayload {
  """The ID of the project milestone."""
  id: String!

  """The name of the project milestone."""
  name: String!

  """The target date of the project milestone."""
  targetDate: String!
}

"""Certain properties of a project status."""
type ProjectStatusChildWebhookPayload {
  """The color of the project status."""
  color: String!

  """The ID of the project status."""
  id: String!

  """The name of the project status."""
  name: String!

  """The type of the project status."""
  type: String!
}

"""Certain properties of a project update."""
type ProjectUpdateChildWebhookPayload {
  """The body of the project update."""
  body: String!

  """The ID of the project update."""
  id: String!

  """The project that the project update belongs to."""
  project: ProjectChildWebhookPayload!

  """The ID of the user who wrote the project update."""
  userId: String!
}

"""Payload for a project update webhook."""
type ProjectUpdateWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The body of the project update."""
  body: String!

  """The body data of the project update."""
  bodyData: String!

  """The time at which the entity was created."""
  createdAt: String!

  """The edited at timestamp of the project update."""
  editedAt: String!

  """The health of the project update."""
  health: String!

  """The ID of the entity."""
  id: String!

  """The project that the project update belongs to."""
  project: ProjectChildWebhookPayload!

  """The project id of the project update."""
  projectId: String!

  """The reaction data for this project update."""
  reactionData: JSONObject!

  """The slug id of the project update."""
  slugId: String!

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the project update."""
  url: String

  """The user who wrote the project update."""
  user: UserChildWebhookPayload!

  """The user id of the project update."""
  userId: String!
}

"""Payload for a project webhook."""
type ProjectWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The auto archived at timestamp of the project."""
  autoArchivedAt: String

  """The canceled at timestamp of the project."""
  canceledAt: String

  """The project's color."""
  color: String!

  """The completed at timestamp of the project."""
  completedAt: String

  """The number of completed issues in the project after each week."""
  completedIssueCountHistory: [Float!]!

  """The number of completed estimation points after each week."""
  completedScopeHistory: [Float!]!

  """The content of the project."""
  content: String

  """The ID of the issue that was converted to the project."""
  convertedFromIssueId: String

  """The time at which the entity was created."""
  createdAt: String!

  """The ID of the user who created the project."""
  creatorId: String

  """The project's description."""
  description: String!

  """The document content ID of the project."""
  documentContentId: String

  """The health of the project."""
  health: String

  """The time at which the project health was updated."""
  healthUpdatedAt: String

  """The icon of the project."""
  icon: String

  """The ID of the entity."""
  id: String!

  """The number of in progress estimation points after each week."""
  inProgressScopeHistory: [Float!]!

  """The initiatives associated with the project."""
  initiatives: [InitiativeChildWebhookPayload!]

  """The total number of issues in the project after each week."""
  issueCountHistory: [Float!]!

  """IDs of the labels associated with this project."""
  labelIds: [String!]!

  """The ID of the last template that was applied to the project."""
  lastAppliedTemplateId: String

  """The ID of the last update posted for this project."""
  lastUpdateId: String

  """The project lead."""
  lead: UserChildWebhookPayload

  """The ID of the project lead."""
  leadId: String

  """IDs of the members of the project."""
  memberIds: [String!]!

  """The milestones associated with the project."""
  milestones: [ProjectMilestoneChildWebhookPayload!]

  """The project's name."""
  name: String!

  """
  The priority of the project. 0 = No priority, 1 = Urgent, 2 = High, 3 = Normal, 4 = Low.
  """
  priority: Float!

  """
  The sort order for the project within the organization, when ordered by priority.
  """
  prioritySortOrder: Float!

  """The time at which the project update reminders were paused until."""
  projectUpdateRemindersPausedUntilAt: String

  """The total number of estimation points after each week."""
  scopeHistory: [Float!]!

  """The project's unique URL slug."""
  slugId: String!

  """The sort order for the project within the organization."""
  sortOrder: Float!

  """The estimated start date of the project."""
  startDate: String

  """The resolution of the project's estimated start date."""
  startDateResolution: String

  """The time at which the project was moved into started state."""
  startedAt: String

  """The project status."""
  status: ProjectStatusChildWebhookPayload

  """The ID of the project status."""
  statusId: String!

  """The target date of the project."""
  targetDate: String

  """The resolution of the project's target date."""
  targetDateResolution: String

  """IDs of the teams associated with this project."""
  teamIds: [String!]!

  """The trashed status of the project."""
  trashed: Boolean

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the project."""
  url: String!
}

type Query {
  _dummy: String!
}

"""Payload for a reaction webhook."""
type ReactionWebhookPayload {
  """The time at which the entity was archived."""
  archivedAt: String

  """The comment the reaction is associated with."""
  comment: CommentChildWebhookPayload

  """The ID of the comment that the reaction is associated with."""
  commentId: String

  """The time at which the entity was created."""
  createdAt: String!

  """Name of the reaction's emoji."""
  emoji: String!

  """The ID of the external user that created the reaction."""
  externalUserId: String

  """The ID of the entity."""
  id: String!

  """The ID of the initiative update that the reaction is associated with."""
  initiativeUpdateId: String

  """The issue the reaction is associated with."""
  issue: IssueChildWebhookPayload

  """The ID of the issue that the reaction is associated with."""
  issueId: String

  """The ID of the post that the reaction is associated with."""
  postId: String

  """The project update the reaction is associated with."""
  projectUpdate: ProjectUpdateChildWebhookPayload

  """The ID of the project update that the reaction is associated with."""
  projectUpdateId: String

  """The time at which the entity was updated."""
  updatedAt: String!

  """The user that created the reaction."""
  user: UserChildWebhookPayload

  """The ID of the user that created the reaction."""
  userId: String
}

"""Certain properties of a team."""
type TeamChildWebhookPayload {
  """The ID of the team."""
  id: String!

  """The key of the team."""
  key: String!

  """The name of the team."""
  name: String!
}

"""Certain properties of a user."""
type UserChildWebhookPayload {
  """The avatar URL of the user."""
  avatarUrl: String

  """The email of the user."""
  email: String!

  """The ID of the user."""
  id: String!

  """The name of the user."""
  name: String!

  """The URL of the user."""
  url: String!
}

"""Payload for a user webhook."""
type UserWebhookPayload {
  """Whether the user is active."""
  active: Boolean!

  """Whether the user is an admin."""
  admin: Boolean!

  """Whether the user is an app."""
  app: Boolean!

  """The time at which the entity was archived."""
  archivedAt: String

  """The avatar URL of the user."""
  avatarUrl: String

  """The time at which the entity was created."""
  createdAt: String!

  """The description of the user."""
  description: String

  """The reason the user is disabled."""
  disableReason: String

  """The display name of the user."""
  displayName: String!

  """The email of the user."""
  email: String!

  """Whether the user is a guest."""
  guest: Boolean!

  """The ID of the entity."""
  id: String!

  """The name of the user."""
  name: String!

  """The local timezone of the user."""
  timezone: String

  """The time at which the entity was updated."""
  updatedAt: String!

  """The URL of the user."""
  url: String!
}

"""Certain properties of a workflow state."""
type WorkflowStateChildWebhookPayload {
  """The color of the workflow state."""
  color: String!

  """The ID of the workflow state."""
  id: String!

  """The name of the workflow state."""
  name: String!

  """The type of the workflow state."""
  type: String!
}