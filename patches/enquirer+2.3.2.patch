diff --git a/node_modules/enquirer/index.d.ts b/node_modules/enquirer/index.d.ts
index 5dd14ba..26ec885 100644
--- a/node_modules/enquirer/index.d.ts
+++ b/node_modules/enquirer/index.d.ts
@@ -1,101 +1,101 @@
 interface BasePromptOptions {
-  name: string | (() => string)
-  type: string | (() => string)
-  message: string | (() => string) | (() => Promise<string>)
-  initial?: any
-  required?: boolean
-  format?(value: string): string | Promise<string>
-  result?(value: string): string | Promise<string>
-  skip?: ((state: object) => boolean | Promise<boolean>) | boolean
-  validate?(value: string): boolean | Promise<boolean> | string | Promise<string>
-  onSubmit?(name: string, value: any, prompt: Enquirer.Prompt): boolean | Promise<boolean>
-  onCancel?(name: string, value: any, prompt: Enquirer.Prompt): boolean | Promise<boolean>
-  stdin?: NodeJS.ReadStream
-  stdout?: NodeJS.WriteStream
+  name: string | (() => string);
+  type: string | (() => string);
+  message: string | (() => string) | (() => Promise<string>);
+  initial?: any;
+  required?: boolean;
+  format?(value: string): string | Promise<string>;
+  result?(value: string): string | Promise<string>;
+  skip?: ((state: object) => boolean | Promise<boolean>) | boolean;
+  validate?(value: string): boolean | Promise<boolean> | string | Promise<string>;
+  onSubmit?(name: string, value: any, prompt: Enquirer.Prompt): boolean | Promise<boolean>;
+  onCancel?(name: string, value: any, prompt: Enquirer.Prompt): boolean | Promise<boolean>;
+  stdin?: NodeJS.ReadStream;
+  stdout?: NodeJS.WriteStream;
 }
 
 interface Choice {
-  name: string
-  message?: string
-  value?: string
-  hint?: string
-  disabled?: boolean | string
+  name: string;
+  message?: string;
+  value?: string;
+  hint?: string;
+  disabled?: boolean | string;
 }
 
 interface ArrayPromptOptions extends BasePromptOptions {
-  type:
-    | 'autocomplete'
-    | 'editable'
-    | 'form'
-    | 'multiselect'
-    | 'select'
-    | 'survey'
-    | 'list'
-    | 'scale'
-  choices: string[] | Choice[]
-  maxChoices?: number
-  muliple?: boolean
-  initial?: number
-  delay?: number
-  separator?: boolean
-  sort?: boolean
-  linebreak?: boolean
-  edgeLength?: number
-  align?: 'left' | 'right'
-  scroll?: boolean
+  type: "autocomplete" | "editable" | "form" | "multiselect" | "select" | "survey" | "list" | "scale";
+  choices: string[] | Choice[];
+  maxChoices?: number;
+  muliple?: boolean;
+  initial?: number;
+  delay?: number;
+  separator?: boolean;
+  sort?: boolean;
+  linebreak?: boolean;
+  edgeLength?: number;
+  align?: "left" | "right";
+  scroll?: boolean;
 }
 
 interface BooleanPromptOptions extends BasePromptOptions {
-  type: 'confirm'
-  initial?: boolean
+  type: "confirm";
+  initial?: boolean;
 }
 
 interface StringPromptOptions extends BasePromptOptions {
-  type: 'input' | 'invisible' | 'list' | 'password' | 'text'
-  initial?: string
-  multiline?: boolean
+  type: "input" | "invisible" | "list" | "password" | "text";
+  initial?: string;
+  multiline?: boolean;
+}
+
+interface TogglePromptOptions extends BasePromptOptions {
+  type: "toggle";
+  initial?: string;
+  enabled?: string;
+  disabled?: string;
 }
 
 interface NumberPromptOptions extends BasePromptOptions {
-  type: 'numeral'
-  min?: number
-  max?: number
-  delay?: number
-  float?: boolean
-  round?: boolean
-  major?: number
-  minor?: number
-  initial?: number
+  type: "numeral";
+  min?: number;
+  max?: number;
+  delay?: number;
+  float?: boolean;
+  round?: boolean;
+  major?: number;
+  minor?: number;
+  initial?: number;
 }
 
 interface SnippetPromptOptions extends BasePromptOptions {
-  type: 'snippet'
-  newline?: string
+  type: "snippet";
+  newline?: string;
 }
 
 interface SortPromptOptions extends BasePromptOptions {
-  type: 'sort'
-  hint?: string
-  drag?: boolean
-  numbered?: boolean
+  type: "sort";
+  hint?: string;
+  drag?: boolean;
+  numbered?: boolean;
 }
 
 type PromptOptions =
   | ArrayPromptOptions
   | BooleanPromptOptions
   | StringPromptOptions
+  | TogglePromptOptions
   | NumberPromptOptions
   | SnippetPromptOptions
   | SortPromptOptions
-  | BasePromptOptions
+  | BasePromptOptions;
 
 declare class BasePrompt extends NodeJS.EventEmitter {
-    constructor(options?: PromptOptions);
+  constructor(options?: PromptOptions);
 
-    render(): void;
+  render(): void;
 
-    run(): Promise<any>;
-  }
+  run(): Promise<any>;
+}
 
 declare class Enquirer<T = object> extends NodeJS.EventEmitter {
   constructor(options?: object, answers?: T);
